% Feature Extraction and Image Processing
% ISBN: 9780750650786
%
% 3.4.4 Gaussian averaging operator
% The Gaussian averaging operator has been considered to be optimal
% for image smoothing. The template for the Gaussian operator has
% values set by the Gaussian relationship. The Gaussian function
% g at co-ordinates x, y is controlled by the variance sigma^2 according to:
%
% g(x,y) = exp(- (x^2 + y^2)/(2*sigma^2) ) (3.22)
%
% Equation 3.22 gives a way to calculate coefficients for a Gaussian 
% template which is then convolved with an image.
%
% The Laplacian Pyramid as a Compact Image Code
% http://persci.mit.edu/pub_pdfs/pyramid83.pdf
%
% THE GAUSSIAN PYRAMID
% The first step in Laplacian pyramid coding is to low-pass filter
% the original image g0 to obtain image g1. We say that g1 is
% a "reduced" version of g0 in that both resolution and sample 
% density  are  decreased. In a similar way we form g2 as a  reduced
% version of g1, and so on.
% 
% Filtering is performed by a procedure equivalent to convolution with
% one of a family of local, symmetric weighting functions. An important
% member of this family resembles the Gaussian probability distribution,
% so the sequence of images g0, g1,..., gn is called the  Gaussian pyramid.
%
% Suppose the image is represented initially by the array g0 which contains
% C columns and R rows of pixels. Each pixel represents the light intensity
% at the corresponding image point by an integer I between 0 and K-1. This
% image becomes thebottom or zero level of the Gaussian pyramid. Pyramid
% level 1 contains image g1, which is a reduced or low-pass filtered version
% of g0. Each value within level 1 is computed as a weighted average of values
% in level 0 within a 5-by-5 window. Each value within level 2,representing g2,
% is then obtained from values within level 1 by applying the same pattern of
% weights.
%
% THE LAPLACIAN PYRAMID
% Recall that our purpose for constructing the reduced image g1 is that it may
% serve as a prediction for pixel values in the original image g0. To obtain
% a compressed representation, we encode the error image which remains when an
% expanded g1 is subtracted from g0. This image becomes the bottom level of 
% the Laplacian pyramid. The next level is generated by encoding g1 in the same
% way.
function [G,L] = GaussianLaplacian(img)
    %Apply imgaussfilt on img and store it in a temporary image variable
    image = imgaussfilt(img, 2);
    
    %Access alternate rows and columns (downsampling) from the smoothed image and assign it to G
    [h, w] = size(img);
    G = image(1:2:h,1:2:w);
    
    %replicate the rows and columns (upsampling) of G and assign it to L
    ih = repelem(1:h/2,2);
    iw = repelem(1:w/2,2);
    L = img-G(ih,iw);
    
end

img = imread('cameraman.tif');
[G,L] =  GaussianLaplacian(img);
montage({img,G,L}, 'size',[1,3],'BorderSize', 10); %Though Gaussian is half the size, montage function resizes it to fit the window
truesize
