import numpy as np
import em
import common
import naive_em as nem

X = np.loadtxt("test_incomplete.txt")
X_gold = np.loadtxt("test_complete.txt")

K = 4
n, d = X.shape
seed = 0

# naive_em
X = np.loadtxt("toy_data.txt")
mixture, post = common.init(X, 3, 0)
nem.run(X, mixture, post)
# X = np.array([
#     [0.85794562, 0.84725174],
#     [0.6235637 , 0.38438171],
#     [0.29753461, 0.05671298],
#     [0.27265629, 0.47766512],
#     [0.81216873, 0.47997717],
#     [0.3927848 , 0.83607876],
#     [0.33739616, 0.64817187],
#     [0.36824154, 0.95715516],
#     [0.14035078, 0.87008726],
#     [0.47360805, 0.80091075],
#     [0.52047748, 0.67887953],
#     [0.72063265, 0.58201979],
#     [0.53737323, 0.75861562],
#     [0.10590761, 0.47360042],
#     [0.18633234, 0.73691818]])

# mixture = common.GaussianMixture(
#     np.array([
#         [0.6235637 , 0.38438171],
#         [0.3927848 , 0.83607876],
#         [0.81216873, 0.47997717],
#         [0.14035078, 0.87008726],
#         [0.36824154, 0.95715516],
#         [0.10590761, 0.47360042]
#     ]),
#     np.array([0.10038354, 0.07227467, 0.13240693, 0.12411825, 0.10497521, 0.12220856]),
#     np.array([0.1680912, 0.15835331, 0.21384187, 0.14223565, 0.14295074, 0.17452722])
# )
# #nem.estep(X, mixture)

# post = np.array([
#  [0.15765074, 0.20544344, 0.17314824, 0.15652173, 0.12169798, 0.18553787],
#  [0.1094766 , 0.22310587, 0.24109142, 0.0959303 , 0.19807563, 0.13232018],
#  [0.22679645, 0.36955206, 0.02836173, 0.03478709, 0.00807236, 0.33243031],
#  [0.16670188, 0.18637975, 0.20964608, 0.17120102, 0.09886116, 0.16721011],
#  [0.04250305, 0.22996176, 0.05151538, 0.33947585, 0.18753121, 0.14901275],
#  [0.09799086, 0.28677458, 0.16895715, 0.21054678, 0.0069597 , 0.22877093],
#  [0.16764519, 0.16897033, 0.25848053, 0.18674186, 0.09846462, 0.11969746],
#  [0.28655211, 0.02473762, 0.27387452, 0.27546459, 0.08641467, 0.05295649],
#  [0.11353057, 0.13090863, 0.20522811, 0.15786368, 0.35574052, 0.03672849],
#  [0.10510461, 0.08116927, 0.3286373 , 0.12745369, 0.23464272, 0.12299241],
#  [0.09757735, 0.06774952, 0.40286261, 0.08481828, 0.1206645 , 0.22632773],
#  [0.24899344, 0.02944918, 0.25413459, 0.02914503, 0.29614373, 0.14213403],
#  [0.35350682, 0.21890411, 0.26755234, 0.01418274, 0.10235276, 0.04350123],
#  [0.15555757, 0.06236572, 0.16703133, 0.21760554, 0.03369562, 0.36374421],
#  [0.1917808,  0.08982788, 0.17710673, 0.03179658, 0.19494387, 0.31454414]
# ])

# g = nem.mstep(X, post)
# r = (g.mu - np.array([
#     [0.43216722, 0.64675402],
#     [0.46139681, 0.57129172],
#     [0.44658753, 0.68978041],
#     [0.44913747, 0.66937822],
#     [0.47080526, 0.68008664],
#     [0.40532311, 0.57364425]
# ]) < 0.000001).all()
# print("mu", r)

# #print(g.var)
# #print(np.array([0.05218451, 0.06230449, 0.03538519, 0.05174859, 0.04524244, 0.05831186]))
# r = (g.var - 
# np.array([0.05218451, 0.06230449, 0.03538519, 0.05174859, 0.04524244, 0.05831186])
# < 0.000001).all()
# print("var", r)

# #print(g.p)
# #print(np.array([0.1680912, 0.15835331, 0.21384187, 0.14223565, 0.14295074, 0.17452722]))
# r = (g.p - 
# np.array([0.1680912, 0.15835331, 0.21384187, 0.14223565, 0.14295074, 0.17452722])
# < 0.000001).all()
# print("p", r)

# X = np.array([
#     [0.47450216, 0.80615985, 0.95184929],
#     [0.28725426, 0.3801742 , 0.02768071],
#     [0.38350391, 0.67765966, 0.32209521],
#     [0.1809507 , 0.08062218, 0.51634058],
#     [0.78892962, 0.92135691, 0.57329741],
#     [0.61445627, 0.07610622, 0.24104604],
#     [0.49846132, 0.91945281, 0.39192892],
#     [0.55480281, 0.63998325, 0.77042052],
#     [0.10727314, 0.41872593, 0.783684  ],
#     [0.94176531, 0.49248698, 0.67735413],
#     [0.14880512, 0.4763987 , 0.79112124],
#     [0.77177774, 0.79782875, 0.65844778],
#     [0.46222447, 0.88179829, 0.48194016],
#     [0.16453907, 0.01194157, 0.71215553],
#     [0.16414014, 0.66550896, 0.77902733]
# ])
# post = np.array([
#     [0.41724525, 0.44696556, 0.09710817, 0.03868102],
#     [0.39789932, 0.44820407, 0.02274652, 0.13115009],
#     [0.07219022, 0.28737688, 0.38164942, 0.25878348],
#     [0.3398663 , 0.35984486, 0.24317213, 0.05711671],
#     [0.19924895, 0.44081508, 0.25633597, 0.1036    ],
#     [0.20332185, 0.20184191, 0.3249027,  0.26993355],
#     [0.19673785, 0.45078755, 0.25146267, 0.10101193],
#     [0.07111268, 0.32388425, 0.16654943, 0.43845365],
#     [0.23225899, 0.23802,    0.43034565, 0.09937535],
#     [0.33314001, 0.08065374, 0.35146638, 0.23473988],
#     [0.06489572, 0.33339143, 0.40932192, 0.19239094],
#     [0.30588423, 0.23657889, 0.20309585, 0.25444103],
#     [0.69677027, 0.23731354, 0.00814618, 0.05777   ],
#     [0.38982027, 0.07117481, 0.39242623, 0.14657869],
#     [0.20971307, 0.27450262, 0.0728351,  0.4429492 ]
# ])
# g = nem.mstep(X, post)
# r = (g.mu - np.array([
#     [0.44214988, 0.55309137, 0.56638934],
#     [0.42706866, 0.60421779, 0.56041226],
#     [0.42577166, 0.4802723 , 0.59993378],
#     [0.45528021, 0.54823288, 0.59747821]
# ]) < 0.000001).all()
# print("mu", r)

# r = (g.var - 
# np.array([0.07653705, 0.06713747, 0.07108582, 0.06274528])
# < 0.000001).all()
# print("var", r)

# r = (g.p - 
# np.array([0.27534033, 0.29542368, 0.24077095, 0.18846504])
# < 0.000001).all()
# print("p", r)