{"id":"node_modules/bennu/dist_node/text.js","dependencies":[{"name":"/mnt/f/github/sandbox/sources/javascript/milkLanguage/package.json","includedInParent":true,"mtime":1565340560859},{"name":"/mnt/f/github/sandbox/sources/javascript/milkLanguage/node_modules/bennu/package.json","includedInParent":true,"mtime":1565340560823},{"name":"./parse","loc":{"line":6,"column":18},"parent":"/mnt/f/github/sandbox/sources/javascript/milkLanguage/node_modules/bennu/dist_node/text.js","resolved":"/mnt/f/github/sandbox/sources/javascript/milkLanguage/node_modules/bennu/dist_node/parse.js"}],"generated":{"js":"/*\n * THIS FILE IS AUTO GENERATED FROM 'lib/text.kep'\n * DO NOT EDIT\n*/\n\"use strict\";\nvar __o = require(\"./parse\"),\n    character, oneOf, noneOf, string, trie, match, anyChar, letter, space, digit, always = __o[\"always\"],\n    attempt = __o[\"attempt\"],\n    bind = __o[\"bind\"],\n    optional = __o[\"optional\"],\n    ExpectError = __o[\"ExpectError\"],\n    next = __o[\"next\"],\n    label = __o[\"label\"],\n    token = __o[\"token\"],\n    join = Function.prototype.call.bind(Array.prototype.join),\n    map = Function.prototype.call.bind(Array.prototype.map),\n    reduce = Function.prototype.call.bind(Array.prototype.reduce),\n    reduceRight = Function.prototype.call.bind(Array.prototype.reduceRight),\n    StringError = (function(position, string, index, expected, found) {\n        var self = this;\n        ExpectError.call(self, position, expected, found);\n        (self.string = string);\n        (self.index = index);\n    });\n(StringError.prototype = new(ExpectError)());\n(StringError.prototype.constructor = StringError);\nObject.defineProperty(StringError.prototype, \"errorMessage\", ({\n    \"get\": (function() {\n        var self = this;\n        return (((((((\"In string: '\" + self.string) + \"' at index: \") + self.index) + \", Expected: \") +\n            self.expected) + \" Found: \") + (self.found ? self.found : \"end of input\"));\n    })\n}));\nvar unbox = (function(y) {\n    return (\"\" + y);\n}),\n    _character = (function(c, err) {\n        var x;\n        return token(((x = (\"\" + c)), (function(r) {\n            return (x === (\"\" + r));\n        })), err);\n    });\n(character = (function(c) {\n    return _character(c, (function(pos, tok) {\n        return new(ExpectError)(pos, c, ((tok === null) ? \"end of input\" : tok));\n    }));\n}));\n(oneOf = (function(chars) {\n    var chars0 = map(chars, unbox),\n        msg;\n    return token((function(x) {\n        return (chars0.indexOf((\"\" + x)) >= 0);\n    }), ((msg = join(chars0, \" or \")), (function(pos, tok) {\n        return new(ExpectError)(pos, msg, ((tok === null) ? \"end of input\" : tok));\n    })));\n}));\n(noneOf = (function(chars) {\n    var chars0 = map(chars, unbox),\n        msg;\n    return token((function(z) {\n        var x = (chars0.indexOf((\"\" + z)) >= 0);\n        return (!x);\n    }), ((msg = (\"none of:\" + join(chars0, \" or \"))), (function(pos, tok) {\n        return new(ExpectError)(pos, msg, ((tok === null) ? \"end of input\" : tok));\n    })));\n}));\nvar reducer = (function(p, c, i, s) {\n    return next(_character(c, (function(pos, tok) {\n        return new(StringError)(pos, s, i, c, tok);\n    })), p);\n});\n(string = (function(s) {\n    return attempt(reduceRight(s, reducer, always((\"\" + s))));\n}));\nvar wordReduce = (function(parent, l) {\n    (parent[l] = (parent[l] || ({})));\n    return parent[l];\n}),\n    wordsReduce = (function(trie, word) {\n        var node = reduce(word, wordReduce, trie);\n        (node[\"\"] = word);\n        return trie;\n    }),\n    _trie = (function(trie) {\n        var chars, msg, keys = Object.keys(trie),\n            paths = reduce(keys, (function(p, c) {\n                if (c) {\n                    (p[c] = _trie(trie[c]));\n                }\n                return p;\n            }), ({})),\n            select = attempt(bind(((chars = map(keys, unbox)), token((function(x) {\n                return (chars.indexOf((\"\" + x)) >= 0);\n            }), ((msg = join(chars, \" or \")), (function(pos, tok) {\n                return new(ExpectError)(pos, msg, ((tok === null) ? \"end of input\" : tok));\n            })))), (function(y) {\n                return paths[y];\n            })));\n        return (trie.hasOwnProperty(\"\") ? optional(trie[\"\"], select) : select);\n    });\n(trie = (function(z) {\n    var z0 = reduce(z, wordsReduce, ({})),\n        chars, msg, keys, paths, select;\n    return attempt(((keys = Object.keys(z0)), (paths = reduce(keys, (function(p, c) {\n        if (c) {\n            (p[c] = _trie(z0[c]));\n        }\n        return p;\n    }), ({}))), (select = attempt(bind(((chars = map(keys, unbox)), token((function(x) {\n        return (chars.indexOf((\"\" + x)) >= 0);\n    }), ((msg = join(chars, \" or \")), (function(pos, tok) {\n        return new(ExpectError)(pos, msg, ((tok === null) ? \"end of input\" :\n            tok));\n    })))), (function(y) {\n        return paths[y];\n    })))), (z0.hasOwnProperty(\"\") ? optional(z0[\"\"], select) : select)));\n}));\n(match = (function(pattern, expected) {\n    return token(RegExp.prototype.test.bind(pattern), (function(pos, tok) {\n        return new(ExpectError)(pos, expected, ((tok === null) ? \"end of input\" : tok));\n    }));\n}));\nvar pattern;\n(anyChar = label(\"Any Character\", ((pattern = /^.$/), token(RegExp.prototype.test.bind(pattern), (function(pos, tok) {\n    return new(ExpectError)(pos, \"any character\", ((tok === null) ? \"end of input\" : tok));\n})))));\nvar pattern0;\n(letter = label(\"Any Letter\", ((pattern0 = /^[a-z]$/i), token(RegExp.prototype.test.bind(pattern0), (function(pos, tok) {\n    return new(ExpectError)(pos, \"any letter character\", ((tok === null) ? \"end of input\" : tok));\n})))));\nvar pattern1;\n(space = label(\"Any Whitespace\", ((pattern1 = /^\\s$/i), token(RegExp.prototype.test.bind(pattern1), (function(pos, tok) {\n    return new(ExpectError)(pos, \"any space character\", ((tok === null) ? \"end of input\" : tok));\n})))));\nvar pattern2;\n(digit = label(\"Any Digit\", ((pattern2 = /^[0-9]$/i), token(RegExp.prototype.test.bind(pattern2), (function(pos, tok) {\n    return new(ExpectError)(pos, \"any digit character\", ((tok === null) ? \"end of input\" : tok));\n})))));\n(exports[\"character\"] = character);\n(exports[\"oneOf\"] = oneOf);\n(exports[\"noneOf\"] = noneOf);\n(exports[\"string\"] = string);\n(exports[\"trie\"] = trie);\n(exports[\"match\"] = match);\n(exports[\"anyChar\"] = anyChar);\n(exports[\"letter\"] = letter);\n(exports[\"space\"] = space);\n(exports[\"digit\"] = digit);"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/bennu/dist_node/text.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/bennu/dist_node/text.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}}],"sources":{"node_modules/bennu/dist_node/text.js":"/*\n * THIS FILE IS AUTO GENERATED FROM 'lib/text.kep'\n * DO NOT EDIT\n*/\n\"use strict\";\nvar __o = require(\"./parse\"),\n    character, oneOf, noneOf, string, trie, match, anyChar, letter, space, digit, always = __o[\"always\"],\n    attempt = __o[\"attempt\"],\n    bind = __o[\"bind\"],\n    optional = __o[\"optional\"],\n    ExpectError = __o[\"ExpectError\"],\n    next = __o[\"next\"],\n    label = __o[\"label\"],\n    token = __o[\"token\"],\n    join = Function.prototype.call.bind(Array.prototype.join),\n    map = Function.prototype.call.bind(Array.prototype.map),\n    reduce = Function.prototype.call.bind(Array.prototype.reduce),\n    reduceRight = Function.prototype.call.bind(Array.prototype.reduceRight),\n    StringError = (function(position, string, index, expected, found) {\n        var self = this;\n        ExpectError.call(self, position, expected, found);\n        (self.string = string);\n        (self.index = index);\n    });\n(StringError.prototype = new(ExpectError)());\n(StringError.prototype.constructor = StringError);\nObject.defineProperty(StringError.prototype, \"errorMessage\", ({\n    \"get\": (function() {\n        var self = this;\n        return (((((((\"In string: '\" + self.string) + \"' at index: \") + self.index) + \", Expected: \") +\n            self.expected) + \" Found: \") + (self.found ? self.found : \"end of input\"));\n    })\n}));\nvar unbox = (function(y) {\n    return (\"\" + y);\n}),\n    _character = (function(c, err) {\n        var x;\n        return token(((x = (\"\" + c)), (function(r) {\n            return (x === (\"\" + r));\n        })), err);\n    });\n(character = (function(c) {\n    return _character(c, (function(pos, tok) {\n        return new(ExpectError)(pos, c, ((tok === null) ? \"end of input\" : tok));\n    }));\n}));\n(oneOf = (function(chars) {\n    var chars0 = map(chars, unbox),\n        msg;\n    return token((function(x) {\n        return (chars0.indexOf((\"\" + x)) >= 0);\n    }), ((msg = join(chars0, \" or \")), (function(pos, tok) {\n        return new(ExpectError)(pos, msg, ((tok === null) ? \"end of input\" : tok));\n    })));\n}));\n(noneOf = (function(chars) {\n    var chars0 = map(chars, unbox),\n        msg;\n    return token((function(z) {\n        var x = (chars0.indexOf((\"\" + z)) >= 0);\n        return (!x);\n    }), ((msg = (\"none of:\" + join(chars0, \" or \"))), (function(pos, tok) {\n        return new(ExpectError)(pos, msg, ((tok === null) ? \"end of input\" : tok));\n    })));\n}));\nvar reducer = (function(p, c, i, s) {\n    return next(_character(c, (function(pos, tok) {\n        return new(StringError)(pos, s, i, c, tok);\n    })), p);\n});\n(string = (function(s) {\n    return attempt(reduceRight(s, reducer, always((\"\" + s))));\n}));\nvar wordReduce = (function(parent, l) {\n    (parent[l] = (parent[l] || ({})));\n    return parent[l];\n}),\n    wordsReduce = (function(trie, word) {\n        var node = reduce(word, wordReduce, trie);\n        (node[\"\"] = word);\n        return trie;\n    }),\n    _trie = (function(trie) {\n        var chars, msg, keys = Object.keys(trie),\n            paths = reduce(keys, (function(p, c) {\n                if (c) {\n                    (p[c] = _trie(trie[c]));\n                }\n                return p;\n            }), ({})),\n            select = attempt(bind(((chars = map(keys, unbox)), token((function(x) {\n                return (chars.indexOf((\"\" + x)) >= 0);\n            }), ((msg = join(chars, \" or \")), (function(pos, tok) {\n                return new(ExpectError)(pos, msg, ((tok === null) ? \"end of input\" : tok));\n            })))), (function(y) {\n                return paths[y];\n            })));\n        return (trie.hasOwnProperty(\"\") ? optional(trie[\"\"], select) : select);\n    });\n(trie = (function(z) {\n    var z0 = reduce(z, wordsReduce, ({})),\n        chars, msg, keys, paths, select;\n    return attempt(((keys = Object.keys(z0)), (paths = reduce(keys, (function(p, c) {\n        if (c) {\n            (p[c] = _trie(z0[c]));\n        }\n        return p;\n    }), ({}))), (select = attempt(bind(((chars = map(keys, unbox)), token((function(x) {\n        return (chars.indexOf((\"\" + x)) >= 0);\n    }), ((msg = join(chars, \" or \")), (function(pos, tok) {\n        return new(ExpectError)(pos, msg, ((tok === null) ? \"end of input\" :\n            tok));\n    })))), (function(y) {\n        return paths[y];\n    })))), (z0.hasOwnProperty(\"\") ? optional(z0[\"\"], select) : select)));\n}));\n(match = (function(pattern, expected) {\n    return token(RegExp.prototype.test.bind(pattern), (function(pos, tok) {\n        return new(ExpectError)(pos, expected, ((tok === null) ? \"end of input\" : tok));\n    }));\n}));\nvar pattern;\n(anyChar = label(\"Any Character\", ((pattern = /^.$/), token(RegExp.prototype.test.bind(pattern), (function(pos, tok) {\n    return new(ExpectError)(pos, \"any character\", ((tok === null) ? \"end of input\" : tok));\n})))));\nvar pattern0;\n(letter = label(\"Any Letter\", ((pattern0 = /^[a-z]$/i), token(RegExp.prototype.test.bind(pattern0), (function(pos, tok) {\n    return new(ExpectError)(pos, \"any letter character\", ((tok === null) ? \"end of input\" : tok));\n})))));\nvar pattern1;\n(space = label(\"Any Whitespace\", ((pattern1 = /^\\s$/i), token(RegExp.prototype.test.bind(pattern1), (function(pos, tok) {\n    return new(ExpectError)(pos, \"any space character\", ((tok === null) ? \"end of input\" : tok));\n})))));\nvar pattern2;\n(digit = label(\"Any Digit\", ((pattern2 = /^[0-9]$/i), token(RegExp.prototype.test.bind(pattern2), (function(pos, tok) {\n    return new(ExpectError)(pos, \"any digit character\", ((tok === null) ? \"end of input\" : tok));\n})))));\n(exports[\"character\"] = character);\n(exports[\"oneOf\"] = oneOf);\n(exports[\"noneOf\"] = noneOf);\n(exports[\"string\"] = string);\n(exports[\"trie\"] = trie);\n(exports[\"match\"] = match);\n(exports[\"anyChar\"] = anyChar);\n(exports[\"letter\"] = letter);\n(exports[\"space\"] = space);\n(exports[\"digit\"] = digit);"},"lineCount":148}},"error":null,"hash":"8e1ab3b285eda8e9fe1fb0bfe1d829af","cacheData":{"env":{}}}